name: Sync Branches

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to sync"
        required: true
        default: "odc_sample"

env:
  GITHUB_PRIVATE_KEY_PERSONAL: ${{ secrets.PERSONAL_PVT_KEY }}
  GITHUB_PRIVATE_KEY_OFFSHORE: ${{ secrets.OFFSHORE_PVT_KEY }}
  GITHUB_PERSONAL_REPO_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

jobs:
  sync-branches:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Configure SSH for Personal Repository
      - name: Add SSH Key for Personal Repo
        run: |
          git config --global init.defaultBranch main
          
      - name: Checkout Personal Repository
        uses: actions/checkout@v3
        with:
          repository: aravinthsridhar/dta-automation.git
          ref: ${{ github.event.inputs.branch }}
          token: ${{ env.GITHUB_PERSONAL_REPO_TOKEN }}

      # Step 2: Configure SSH for Offshore Repository
      - name: Add SSH Key and Configure
        run: |
         mkdir -p ~/.ssh
         echo "${{ env.GITHUB_PRIVATE_KEY_OFFSHORE }}" | tr -d '\r' > ~/.ssh/id_rsa_offshore
         echo ""
         echo "Checking permissions of remote_key before"
         ls -l ~/.ssh/id_rsa_offshore
         echo "Changing permissions of remote_key"
         chmod 600 ~/.ssh/id_rsa_offshore
         echo "Checking permissions of remote_key after the change"
         ls -l ~/.ssh/id_rsa_offshore
         eval "$(ssh-agent -s)"
         ssh-add ~/.ssh/id_rsa_offshore
         ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Test SSH Authentication
        run: ssh -i ~/.ssh/id_rsa_offshore -o StrictHostKeyChecking=no git@github.com
        
      - name: Add Offshore Repository as Remote
        run: |
          git remote add dest git@github.com:kyybatech/repo_connect_automation.git
          git fetch dest || (echo "Failed to fetch from remote repository" && exit 1)

      # Step 3: Detect Merge Conflicts
      - name: Merge Changes
        run: |
          set -e
          git merge origin/${{ github.event.inputs.branch }} || (echo "Merge conflict detected!" && exit 1)

      # Step 4: Push to Destination Repository
      - name: Push to Destination Repository
        run: |
          set -e
          git push dest ${{ github.event.inputs.branch }}:${{ github.event.inputs.branch }} || (echo "Failed to push changes to destination" && exit 1)

      # Step 5: Debug Output (Optional)
      - name: Debug Git Status
        run: |
          git status
          echo "If workflow failed, debug the logs above."
